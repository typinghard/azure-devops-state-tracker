// <auto-generated />
using System;
using AzureDevopsStateTracker.Data;
using AzureDevopsStateTracker.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AzureDevopsStateTracker.Migrations
{
    [DbContext(typeof(AzureDevopsStateTrackerContext))]
    partial class AzureDevopsStateTrackerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema(DataBaseConfig.SchemaName)
                .HasAnnotation("ProductVersion", "3.1.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AzureDevopsStateTracker.Entities.WorkItem", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AssignedTo")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("TeamProject")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Type")
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("WorkItems");
                });

            modelBuilder.Entity("AzureDevopsStateTracker.Entities.WorkItemChange", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NewDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NewState")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("OldDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OldState")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("WorkItemId")
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("WorkItemId");

                    b.ToTable("WorkItemsChange");
                });

            modelBuilder.Entity("AzureDevopsStateTracker.Entities.WorkItemStatusTime", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("State")
                        .HasColumnType("varchar(200)");

                    b.Property<TimeSpan>("TotalTime")
                        .HasColumnType("time");

                    b.Property<string>("WorkItemId")
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("WorkItemId");

                    b.ToTable("WorkItemsStatusTime");
                });

            modelBuilder.Entity("AzureDevopsStateTracker.Entities.WorkItemChange", b =>
                {
                    b.HasOne("AzureDevopsStateTracker.Entities.WorkItem", "WorkItem")
                        .WithMany("WorkItemsChanges")
                        .HasForeignKey("WorkItemId");
                });

            modelBuilder.Entity("AzureDevopsStateTracker.Entities.WorkItemStatusTime", b =>
                {
                    b.HasOne("AzureDevopsStateTracker.Entities.WorkItem", "WorkItem")
                        .WithMany("WorkItemsStatusTime")
                        .HasForeignKey("WorkItemId");
                });
#pragma warning restore 612, 618
        }
    }
}
