# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

#trigger:
#- version-5

pool:
  vmImage: 'ubuntu-18.04'

variables:
  buildConfiguration: 'Release'
  prPipeline: $[eq(variables['Build.Reason'], 'PullRequest')]

steps:
- task: UseDotNet@2
  displayName: 'Install .NET Core SDK'
  inputs:
    version: 6.x
    performMultiLevelLookup: true
    includePreviewVersions: true # Required

steps:
- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: restore
    projects: '**/*.csproj'
    feedsToUse: config

- task: NuGetCommand@2
  displayName: 'Instalando sonarscanner'
  inputs:
    command: custom
    arguments: 'dotnet tool install --global dotnet-sonarscanner'

- task: NuGetCommand@2
  displayName: 'Instalando dotCover'
  inputs:
    command: custom
    arguments: 'dotnet tool install --global JetBrains.dotCover.GlobalTool'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: build
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Rodando os testes da aplicação
  inputs:
    command: test
    projects: '**/*[Tt]ests/*.csproj'
    arguments: '--configuration $(BuildConfiguration) --collect "Code Coverage"'
    
- task: DotNetCoreCLI@2
  displayName: 'Rodando SonarScanner '
  inputs:
    command: custom
    custom: tool
    arguments: 'dotnet sonarscanner begin /k:"$(SONAR_PROJECT_KEY)" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login="$(SONAR_TOKEN)" /d:sonar.cs.dotcover.reportsPaths=dotCover.Output.html
    dotnet build –no-incremental
    dotnet dotcover test --dcReportType=HTML
    dotnet sonarscanner end /d:sonar.login="$(SONAR_TOKEN)"'
