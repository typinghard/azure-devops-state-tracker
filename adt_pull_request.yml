pool:
  name: Azure Pipelines
  demands: java

steps:
- task: SonarSource.sonarcloud.14d9cde6-c1da-4d55-aa01-2965cd301255.SonarCloudPrepare@1
  displayName: 'Prepare analysis on SonarCloud'
  inputs:
    SonarCloud: 'SonarCloud-ADT'
    organization: typinghard
    projectKey: 'typinghard_azure-devops-tracker'
    extraProperties: |
     # Additional properties that will be passed to the scanner, 
     # Put one key=value per line, example:
     # sonar.exclusions=**/*.bin
     #sonar.coverageReportPaths=$(Agent.TempDirectory)/**/*.trx
     #sonar.cs.opencover.reportsPaths=$(Agent.TempDirectory)/**/*.trx
     #sonar.coverageReportPaths=$(Agent.TempDirectory)/reports/SonarQube.xml
     #sonar.cs.dotcover.reportsPaths=$(Agent.TempDirectory)/reports/DetailedXML.xml
     #sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)/**/coverage.opencover.xml
     #sonar.cs.vstest.reportsPaths=$(Agent.TempDirectory)/**/*.trx
     #sonar.cs.opencover.reportsPaths=$(Agent.TempDirectory)\**\*.trx
     #sonar.cs.vstest.reportsPaths=$(Agent.TempDirectory)\**\*.trx
     #sonar.cs.vscoveragexml.reportsPaths=$(Agent.TempDirectory)\**\*.coveragexml
     sonar.cs.vscoveragexml.reportsPaths=$(Build.SourcesDirectory)/tests/AzureDevopsTracker.Tests/coverage.opencover.xml
     sonar.coverageReportPaths=$(Build.SourcesDirectory)/**/coverage.opencover.xml
     sonar.cs.opencover.reportsPaths=coverage.opencover.xml


- task: CmdLine@2
  inputs:
    script: dotnet restore
  displayName: 'Rodando dotnet restore'

- task: CmdLine@2
  inputs:
    script: dotnet build --no-incremental
  displayName: 'Rodando dotnet build'

- script: 'dotnet tool install --global coverlet.console'  
  displayName: 'Install coverlet global tool'  

- task: DotNetCoreCLI@2
  displayName: 'Rodando dotnet test'
  inputs:
    command: test
    projects: '**/*[Tt]ests/*.csproj'
    arguments: '--configuration $(BuildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=opencover --collect "Code Coverage"'

#- script: 'reportgenerator -reports:$(Agent.TempDirectory)/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/coverlet/reports -reporttypes:"Cobertura"'  
#  displayName: 'Create reports'

- script: coverlet *.Tests.dll --target "dotnet"  --targetargs "test --no-build" -f=opencover  -o="coverage.opencover.xml"
  displayName: 'Run coverlet'

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'VSTest'
    testResultsFiles: '$(Agent.TempDirectory)/**.*trx'

#- task: Palmmedia.reportgenerator.reportgenerator-build-release-task.reportgenerator@5
#  displayName: ReportGenerator
#  inputs:
#    reports: '$(Agent.TempDirectory)/coverage.cobertura.xml'
#    targetdir: '$(Build.SourcesDirectory)/reports'
#    reporttypes: 'SonarQube'
#    assemblyfilters: '-xunit\*'

#- task: PublishCodeCoverageResults@1
#  displayName: 'Publish code coverage from $(Build.SourcesDirectory)/coverage.xml'
#  inputs:
#    codeCoverageTool: Cobertura
#    summaryFileLocation: '$(Build.SourcesDirectory)/coverage.xml'

- task: SonarSource.sonarcloud.ce096e50-6155-4de8-8800-4221aaeed4a1.SonarCloudAnalyze@1
  displayName: 'Run Code Analysis'

- task: SonarSource.sonarcloud.38b27399-a642-40af-bb7d-9971f69712e8.SonarCloudPublish@1
  displayName: 'Publish Quality Gate Result'