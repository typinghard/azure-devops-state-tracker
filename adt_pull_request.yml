# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

#trigger:
#- version-5

pool:
  vmImage: windows-latest

variables:
  buildConfiguration: 'Release'
  prPipeline: $[eq(variables['Build.Reason'], 'PullRequest')]

steps:
- script: dotnet tool install --global dotnet-sonarscanner
  displayName: 'Instalando dependência global sonarscanner'

- script: dotnet tool install --global JetBrains.dotCover.GlobalTool
  displayName: 'Instalando dependência global JetBrains.dotCover.GlobalTool'

- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Calculate code coverage'
  continueOnError: false
  inputs:
    command: test
    projects: '**/*[Tt]ests/*.csproj'
    arguments: '--configuration $(BuildConfiguration) /p:CollectCoverage=true /p:CoverletOutput=../TestResults/ /p:CoverletOutputFormat="json%2ccobertura" /p:MergeWith=../TestResults/coverage.json  /m:1'
    publishTestResults: false

- task: DotNetCoreCLI@2
  displayName: 'Checkpoint: Total branch coverage >= $(codeCoverageBranchThreshold)'
  continueOnError: false
  inputs:
    command: test
    projects: '**/*[Tt]ests/*.csproj'
    arguments: '--configuration $(BuildConfiguration) /p:CollectCoverage=true /p:CoverletOutput=../TestResults/ /p:CoverletOutputFormat="json%2ccobertura" /p:MergeWith=../TestResults/coverage.json /p:ThresholdType=branch /p:Threshold=$(codeCoverageBranchThreshold) /p:ThresholdStat=total'
    publishTestResults: false

- script: dotnet sonarscanner begin /k:"${env:SONAR_PROJECT_KEY}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login="${env:SONAR_TOKEN}" /d:sonar.cs.dotcover.reportsPaths=dotCover.Output.html
  displayName: 'Rodando SonarScanner '

- script: dotnet build –no-incremental
  displayName: 'Rodando SonarScanner '

- script: dotnet dotcover test --dcReportType=HTML
  displayName: 'Rodando SonarScanner '

- script: dotnet sonarscanner end /d:sonar.login="${env:SONAR_TOKEN}"
  displayName: 'Rodando SonarScanner '